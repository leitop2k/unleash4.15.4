# This docker compose setup configures:
# - the Unleash server instance + the necessary backing Postgres database
# - the Unleash proxy
#
# To learn more about all the parts of Unleash, visit
# https://docs.getunleash.io
#
# NOTE: please do not use this configuration for production setups.
# Unleash does not take responsibility for any data leaks or other
# problems that may arise as a result.
#
# This is intended to be used for demo, development, and learning
# purposes only.

version: "3.9"
services:

  # The Unleash server contains the Unleash configuration and
  # communicates with server-side SDKs and the Unleash Proxy
  web:
    container_name: local_unleash
    image: leitop2k/unleash_4.15.4:latest
    ports:
      - "4242:4242"
    environment:
      # This points Unleash to its backing database (defined in the `db` section below)
      DATABASE_URL: "postgres://unleash:JuuYQW7iYJaJbm5@192.168.1.6:5432/unleash_db"
      # Disable SSL for database connections. @chriswk: why do we do this?
      DATABASE_SSL: "false"
      # Changing log levels:
      LOG_LEVEL: "debug"
      # Proxy clients must use one of these keys to connect to the
      # Proxy. To add more keys, separate them with a comma (`key1,key2`).
      INIT_FRONTEND_API_TOKENS: "default:development.unleash-insecure-frontend-api-token"
      # Initialize Unleash with a default set of client API tokens. To
      # initialize Unleash with multiple tokens, separate them with a
      # comma (`token1,token2`).
      INIT_CLIENT_API_TOKENS: "default:development.unleash-insecure-api-token"
      # не забыть переписать ключик!
      UNLEASH_SECRET: "some-key"
      ENABLE_REQUEST_LOGGER: "true"
      EMAIL_HOST: "smtp.timeweb.ru"
      EMAIL_PORT: "25"
      EMAIL_SENDER: 'test@nekto-z.ru'
      EMAIL_USER: 'test@nekto-z.ru'
      EMAIL_PASSWORD: 'asqlobrvb10'
    command: [ "node", "index.js" ]
    restart: always
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:4242/health || exit 1
      interval: 1s
      timeout: 1m
      retries: 5
      start_period: 15s
  keycloak:
    container_name: local_keycloak
    environment:
      DB_VENDOR: postgres
      DB_ADDR: 192.168.1.6
      DB_DATABASE: keycloack_db
      DB_USER: keycloack
      DB_PASSWORD: wOuCc%K.8jW.2q
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_FRONTEND_URL: https://keycloak.nekto-z.ru/auth
    image: jboss/keycloak:latest
    ports:
      - "8080:8080"
    restart: always
  pgadmin:
    container_name: local_pgadmin
    image: dpage/pgadmin4:6
    environment:
      PGADMIN_DEFAULT_EMAIL: unleash@nekto-z.ru
      PGADMIN_DEFAULT_PASSWORD: unleash
    ports:
      - "15432:80"
    volumes:
      - "pgadmin:/var/lib/pgadmin4"
    restart: always

volumes:
  pgadmin:
